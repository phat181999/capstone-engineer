version: 2.1

orbs:
  aws-eks: circleci/aws-eks@0.2.3
  aws-ecr: circleci/aws-ecr@3.1.0
  aws-cli: circleci/aws-cli@1.4.0

commands:
  install_awscli:
    description: Install AWS CLI v2
    steps:
      - run:
          name: Install AWS CLI v2
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install

jobs:
  run-lint:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Install hadolint
          command: |
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
            sudo chmod +x /bin/hadolint
      - run:
          name: Run Lint
          command: |
            hadolint Dockerfile

  build-docker-image:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build Docker Image
          command: |
            export TAG=v${CIRCLE_BUILD_NUM}
            export IMAGE_NAME=capstone-engineer-cloud-hotanphat
            docker build -t phat99/$IMAGE_NAME:$TAG .

  push-docker-image:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Push Docker Image to Docker Hub
          command: |
            export TAG=v${CIRCLE_BUILD_NUM}
            export IMAGE_NAME=capstone-engineer-cloud-hotanphat

            docker build -t phat99/$IMAGE_NAME:$TAG .
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD 
            docker push phat99/$IMAGE_NAME:$TAG

  authen-aws-iam:
    docker:
      - image: circleci/python:3.9

    steps:
      - checkout
      - run:
          name: Install AWS IAM Authenticator
          command: |
            if which aws-iam-authenticator > /dev/null; then
              echo "AWS IAM Authenticator for Kubernetes is already installed"
              exit 0
            fi

            curl -o aws-iam-authenticator https://amazon-eks.s3.us-east-1.amazonaws.com/1.20.7/2021-04-12/bin/linux/amd64/aws-iam-authenticator
            chmod +x aws-iam-authenticator
            sudo mv aws-iam-authenticator /usr/local/bin/

  deploy-application:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
      docker-image-name:
        description: |
          Name of the docker image to be deployed
        type: string
      version-info:
        description: |
          App version information
        type: string
      aws-region:
        description: |
          AWS region
        type: string
        default: "us-west-2"
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
          aws-region: << parameters.aws-region >>
      - kubernetes/create-or-update-resource:
          resource-file-path: "deployments/deployment.yml"
          get-rollout-status: true
          resource-name: deployment/capstone
      - kubernetes/create-or-update-resource:
          resource-file-path: "deployments/deployment.yml"
      - run:
          name: Deploy index.html
          command: |
            echo $INDEX_HTML_CONTENT > index.html
            aws s3 cp index.html s3://your-bucket-name/index.html

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - run-lint
      - build-docker-image
      - push-docker-image:
          requires:
            - "build-docker-image"
      - authen-aws-iam
      - aws-ecr/build_and_push_image:
          name: build-and-push-image-ecr
          account-url: AWS_ECR_URL
          region: AWS_DEFAULT_REGION
          repo: eks_orb_capstone_project
          dockerfile: ~/project/Dockerfile
          path: ~/project/
          tag: ${CIRCLE_SHA1}
      - deploy-application:
          stack-name: "capstone-project-final"
